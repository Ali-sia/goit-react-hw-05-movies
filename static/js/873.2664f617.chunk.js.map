{"version":3,"file":"static/js/873.2664f617.chunk.js","mappings":"4MAgDA,UAzCqB,WACnB,IAAQA,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAaA,OAXAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBR,GACbS,MAAK,SAAAC,GACJN,EAAWM,EACZ,IACAC,OAAM,SAAAN,GACLC,EAAS,kCACTM,QAAQC,IAAIR,EACb,GACJ,GAAE,CAACL,IAECG,GAKH,UAAC,IAAD,CAAKW,GAAG,KAAKC,EAAG,EAAhB,UACGV,IAAS,yBAAMA,IACfF,EAAQa,OAAS,GAChB,8BACGb,EAAQc,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,EAKZ,OAGH,SAAC,IAAD,+CAlBG,IAsBV,C,2NC5CKG,EAAU,mCACVC,EAAW,+BACJC,EAAa,mCAEbC,EAAiB,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACbC,EAAAA,EAAAA,IAAA,UACbJ,EADa,uCAC0BD,EAD1B,iBAC0CI,EAD1C,wCADa,cACzBE,EADyB,yBAKxBA,EAAIC,KAAKC,SALe,2CAAH,qDAOjBC,EAAY,mCAAG,WAAOC,GAAP,4FAAgBN,EAAhB,+BAAuB,EAAvB,SACRC,EAAAA,EAAAA,IAAA,UACbJ,EADa,kBACKS,EADL,oBACwBV,EADxB,iBACwCI,EADxC,wCADQ,cACpBE,EADoB,yBAKnBA,EAAIC,MALe,2CAAH,sDAQZI,EAAY,mCAAG,WAAOD,GAAP,4FAAgBN,EAAhB,+BAAuB,EAAvB,SACRC,EAAAA,EAAAA,IAAA,UACbJ,EADa,kBACKS,EADL,4BACgCV,EADhC,iBACgDI,EADhD,wCADQ,cACpBE,EADoB,yBAKnBA,EAAIC,MALe,2CAAH,sDAOZpB,EAAe,mCAAG,WAAOuB,GAAP,4FAAgBN,EAAhB,+BAAuB,EAAvB,SACXC,EAAAA,EAAAA,IAAA,UACbJ,EADa,kBACKS,EADL,4BACgCV,EADhC,iBACgDI,EADhD,wCADW,cACvBE,EADuB,yBAKtBA,EAAIC,KAAKC,SALa,2CAAH,sDAQfI,EAAc,mCAAG,WAAOC,GAAP,4FAAkBT,EAAlB,+BAAyB,EAAzB,SACVC,EAAAA,EAAAA,IAAA,UACbJ,EADa,iCACoBD,EADpB,iBACoCI,EADpC,qDACqFS,IAF3E,cACtBP,EADsB,yBAKrBA,EAAIC,KAAKC,SALY,2CAAH,qD","sources":["components/MovieReviews/MovieReviews.js","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from 'services/api';\n\nimport { Box } from '../Box';\n\nconst MovieReviews = () => {\n  const { moviesId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getMovieReviews(moviesId)\n      .then(response => {\n        setReviews(response);\n      })\n      .catch(error => {\n        setError('Ooops. Something went wrong...');\n        console.log(error);\n      });\n  }, [moviesId]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  return (\n    <Box as=\"ul\" p={4}>\n      {error && <div>{error}</div>}\n      {reviews.length > 0 ? (\n        <>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <b>{author}</b>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </>\n      ) : (\n        <Box>We don`t have any reviews yet</Box>\n      )}\n    </Box>\n  );\n};\n\nexport default MovieReviews;\n","import axios from 'axios';\n\nconst API_KEY = '115b567d77b04428b1251a93b22d9778';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500/'; //+ poster path\n\nexport const getTrandingMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\nexport const getMovieByID = async (movieId, page = 1) => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  return res.data;\n};\n\nexport const getMovieCast = async (movieId, page = 1) => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  return res.data;\n};\nexport const getMovieReviews = async (movieId, page = 1) => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const getMovieByName = async (movieName, page = 1) => {\n  const res = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false&query=${movieName}`\n  );\n\n  return res.data.results;\n};\n"],"names":["moviesId","useParams","useState","reviews","setReviews","error","setError","useEffect","getMovieReviews","then","response","catch","console","log","as","p","length","map","id","author","content","API_KEY","BASE_URL","POSTER_URL","getTrandingMovies","page","axios","res","data","results","getMovieByID","movieId","getMovieCast","getMovieByName","movieName"],"sourceRoot":""}